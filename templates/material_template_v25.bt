//--------------------------------------
//--- 010 Editor v6.0.1 Binary Template
//
// File:
// Author:
// Revision:
// Purpose:
//--------------------------------------
LittleEndian();

typedef float f32;
typedef double f64;
typedef unsigned char u8;
typedef unsigned short u16;
typedef unsigned int u32;
typedef char i8;
typedef short i16;
typedef int i32;
typedef int64 i64;

typedef struct {
    u32 type_offset;
    u32 flags;
    u32 texture_name_offset;
    
    SetBackColor( cLtBlue );
    local i64 current_offset = FTell();
    FSeek( type_offset );
    string type;
    
    SetBackColor( cLtGreen );
    FSeek( texture_name_offset );
    string texture_name;
    
    SetBackColor( cNone );
    FSeek( current_offset );
} TEXTURE;

typedef struct {
    SetBackColor( cLtRed );
    u32 name_offset;

    SetBackColor( cAqua );
    local i64 current_offset = FTell();
    FSeek( name_offset );
    string name;
    FSeek( current_offset );
    
    FSkip( 44 ); // padding
    
    SetBackColor( cLtYellow );
    u16 texture_count;

    FSkip( 2 ); // padding
    
    SetBackColor( cLtGray );
    u32 techset_offset;

    SetBackColor( cLtGreen );
    u32 textures_offset;
    
    SetBackColor( cLtRed );
    FSeek( techset_offset );
    string techset;
    
    SetBackColor( cNone );
    FSeek( textures_offset );
    TEXTURE textures[texture_count] <optimize=false>;

} MATERIAL;

MATERIAL m;